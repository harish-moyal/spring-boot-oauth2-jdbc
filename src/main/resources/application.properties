# DataSource settings: set here your own configurations for the database
# connection. In this example we have "inventory_management" as database name and
# "root" as username and password.
spring.datasource.url=jdbc:mysql://localhost:3306/spring_boot_oauth2
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.test-on-borrow=true
spring.datasource.tomcat.time-between-eviction-runs-millis=60000
spring.datasource.tomcat.validation-query=SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql=true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto=update

# Naming strategy
spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

web.client.id=WEBCLIENTID
mobile.client.id=MOBILECLIENTID
logging.level.org.springframework.security=DEBUG